Value pushed: 10
Stack: [10]

Value pushed: 2
Stack: [10, 2]

Value popped: 2
Stack: [10]

Value popped: 10
Stack: []

Value pushed: 10
Stack: [10]

Value popped: 10
Stack: []

Value pushed: 1
Stack: [1]

Value pushed: 2
Stack: [1, 2]

Value pushed: 3
Stack: [1, 2, 3]

Operator: descending
Stack: [3, 2, 1]

Value popped: 1
Stack: [3, 2]

Value popped: 2
Stack: [3]

Value popped: 3
Stack: []

Value pushed: 3
Stack: [3]

Value pushed: 2
Stack: [3, 2]

Value pushed: 1
Stack: [3, 2, 1]

Operator: ascending
Stack: [1, 2, 3]

Value popped: 3
Stack: [1, 2]

Value popped: 2
Stack: [1]

Value popped: 1
Stack: []

Value pushed: 1
Stack: [1]

Value pushed: 2
Stack: [1, 2]

Value pushed: 3
Stack: [1, 2, 3]

Operator: max
Stack: [3]

Value popped: 3
Stack: []

Value pushed: 1
Stack: [1]

Value pushed: 2
Stack: [1, 2]

Value pushed: 3
Stack: [1, 2, 3]

Operator: min
Stack: [1]

Value popped: 1
Stack: []

Value pushed: 10
Stack: [10]

Stack is empty: false

Value popped: 10
Stack: []

Stack is empty: true


Value pushed: 10
Stack: [10]

Value popped: 10 with 500 milliseconds
Stack: []

Stack is empty: true

Value pushed: 10
Stack: [10]

Value popped: 10 with 1000 milliseconds
Stack: []

Stack is empty: true

Value pushed: 4
Stack: [4]

Value pushed: 5
Stack: [4, 5]

Value pushed: 6
Stack: [4, 5, 6]

Operator: max
Stack: [6]

Value pushed: 2
Stack: [6, 2]

Value pushed: 1
Stack: [6, 2, 1]

Value pushed: 3
Stack: [6, 2, 1, 3]

Operator: descending
Stack: [6, 3, 2, 1]

Value popped: 1
Stack: [6, 3, 2]

Value popped: 2
Stack: [6, 3]

Value popped: 3
Stack: [6]

Value popped: 6
Stack: []

